getwd()
rm(list=ls())
ls()
setwd("D:/IntDownloads/coursa/repores/PA1")
ls()
rm(list=ls())
dta <- read.csv("activity.csv", colClasses = c("numeric", "character", "numeric"))
dta$date <- as.Date(dta$date)
dtaImputed <- dta      #copy data
dtaImputed$steps <- impute(dta$steps, fun=mean)  #fill up missing value with median
head(dtaImputed)
day <- weekdays(dtaImputed$date) #single character vector of days
daytype <- vector()             #initialise an empty vector, to be filled up weekend/weekday
for (i in 1:nrow(dtaImputed)) {
if (day[i] == "Saturday" | day[i] == "Saturday") {
daytype[i] <- "Weekend" }
else {
daytype[i] <- "Weekday" }
}
head(dtaImputed)
head(daytype)
dtaImputed$daytype <- daytype #merge daylevel character into main dataframe
head(dtaImputed)
dtaImputed$daytype <- factor(dtaImputed$daytype)  #change class from character into factor, 1 or 2
stepsByDay <- aggregate(steps ~ interval + daytype, data = dtaImputed, mean)
ggplot(stepsByDay, aes(interval, steps)) +
geom_line(color = "blue") + facet_grid(daytype ~ .) +
xlab("5-minute interval") + ylab("Average number of steps taken")
rm(list=ls())
dta <- read.csv("activity.csv", colClasses = c("numeric", "character", "numeric"))
dta$date <- as.Date(dta$date)
dtaImputed <- dta      #copy data
dtaImputed$steps <- impute(dta$steps, fun=mean)
day <- weekdays(dtaImputed$date) #single character vector of days
daytype <- vector()             #initialise an empty vector, to be filled up weekend/weekday
for (i in 1:nrow(dtaImputed)) {
if (day[i] == "Saturday") {
daytype[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daytype[i] <- "Weekend"
} else {
daytype[i] <- "Weekday"
}
}                               #the loop to fill weekday/weekend into a character vector
dtaImputed$daytype <- daytype
dtaImputed$daytype <- factor(dtaImputed$daytype)  #change class from character into factor, 1 or 2
stepsByDay <- aggregate(steps ~ interval + daytype, data = dtaImputed, mean)
ggplot(stepsByDay, aes(interval, steps)) +
geom_line(color = "blue") + facet_grid(daytype ~ .) +
xlab("5-minute interval") + ylab("Average number of steps taken")
dim(stepsByDay)
rm(list=ls())
